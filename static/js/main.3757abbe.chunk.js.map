{"version":3,"sources":["components/style.js","components/Presenter.js","components/Container.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","props","theme","lightenBlack","CateContent","CateTitle","h2","BoardContainer","BoardBox","border","white","BoardTitle","ms","BoardParty","ls","BoardInfo","ss","black","lightenBlue","red","ProgressBar","ProgressBarWrap","yellow","ProgressGage","progress","blue","css","Finished","Progressing","Presenter","boards","checkPercent","limitNumberOfPeople","onRefresh","console","log","style","cursor","margin","width","fontSize","background","color","textAlign","onClick","map","board","title","size","fill","participateUsers","slice","user","index","src","img","alt","length","deadline","Math","round","id","useState","setBoards","createUser","faker","image","avatar","createBoard","random","uuid","lorem","sentence","Array","undefined","createBoards","numUsers","useEffect","percent","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3757abbe.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    background: ${(props) => props.theme.lightenBlack};\r\n`;\r\n\r\nexport const CateContent = styled.div`\r\n    max-width: 1060px;\r\n    width: 100%;\r\n    display: flex;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const CateTitle = styled.h2`\r\n    margin: 0;\r\n    margin-bottom: 12px;\r\n    padding: 12px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const BoardContainer = styled.div`\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const BoardBox = styled.div`\r\n    width: 760px;\r\n    height: 130px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    border: 1px solid ${(props) => props.theme.border};\r\n    background: ${(props) => props.theme.white};\r\n    padding: 12px;\r\n    margin: 24px 0;\r\n`;\r\n\r\nexport const BoardTitle = styled.div`\r\n    position: relative;\r\n    width: 70%;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    & > div:nth-child(1) {\r\n        width: 80%;\r\n        font-size: ${(props) => props.theme.ms};\r\n        margin-right: 3px;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        position: relative;\r\n\r\n        a:hover {\r\n            text-decoration: underline;\r\n        }\r\n    }\r\n    svg {\r\n        position: absolute;\r\n        right: 10px;\r\n        top: 0px;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport const BoardParty = styled.div`\r\n    position: absolute;\r\n    display: flex;\r\n    bottom: 1px;\r\n    width: 100%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    line-height: 34px;\r\n    & > div {\r\n        width: 40px;\r\n        height: 40px;\r\n        border-radius: 50%;\r\n        margin-left: 6px;\r\n\r\n        & > img {\r\n            border: 1px solid ${(props) => props.theme.lightenBlack};\r\n            width: 100%;\r\n            height: 100%;\r\n            border-radius: 50%;\r\n        }\r\n    }\r\n    span {\r\n        margin-left: 5px;\r\n        line-height: 24px;\r\n        border: 1px solid ${(props) => props.theme.lightenBlack};\r\n        border-radius: 50%;\r\n        width: 40px;\r\n        height: 40px;\r\n        font-size: ${(props) => props.theme.ls};\r\n        cursor: pointer;\r\n        text-align: center;\r\n\r\n        &:hover {\r\n            background: ${(props) => props.theme.lightenBlack};\r\n        }\r\n    }\r\n`;\r\n\r\nexport const BoardInfo = styled.div`\r\n    display: grid;\r\n    position: relative;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    width: 30%;\r\n\r\n    & > div {\r\n        text-align: center;\r\n    }\r\n\r\n    & > div:nth-child(1) {\r\n        font-size: ${(props) => props.theme.ms};\r\n        position: relative;\r\n        &::before {\r\n            content: \"마감\";\r\n            width: 96%;\r\n            height: 16px;\r\n            font-size: ${(props) => props.theme.ss};\r\n            position: absolute;\r\n            left: 0;\r\n            top: 25px;\r\n            color: ${(props) => props.theme.white};\r\n            background: ${(props) => props.theme.black};\r\n            border-radius: 12px;\r\n        }\r\n    }\r\n    & > div:nth-child(2) {\r\n        font-size: ${(props) => props.theme.ms};\r\n        position: relative;\r\n\r\n        &::before {\r\n            content: \"현재\";\r\n            width: 96%;\r\n            height: 16px;\r\n            font-size: ${(props) => props.theme.ss};\r\n            position: absolute;\r\n            left: 0;\r\n            top: 25px;\r\n            color: ${(props) => props.theme.white};\r\n            background: ${(props) => props.theme.lightenBlue};\r\n            border-radius: 12px;\r\n        }\r\n    }\r\n    & > div:nth-child(3) {\r\n        position: relative;\r\n        font-size: ${(props) => props.theme.ms};\r\n\r\n        &::before {\r\n            content: \"제한\";\r\n            width: 96%;\r\n            height: 16px;\r\n            font-size: ${(props) => props.theme.ss};\r\n            position: absolute;\r\n            left: 0;\r\n            top: 25px;\r\n            color: ${(props) => props.theme.white};\r\n            background: ${(props) => props.theme.red};\r\n            border-radius: 12px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ProgressBar = styled.div`\r\n    position: absolute;\r\n    bottom: 15px;\r\n    width: 100%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n`;\r\n\r\nexport const ProgressBarWrap = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    bottom: 0;\r\n    height: 8px;\r\n    border-radius: 12px;\r\n    background: ${(props) => props.theme.yellow};\r\n`;\r\n\r\nexport const ProgressGage = styled.div`\r\n    position: absolute;\r\n    bottom: 0;\r\n    height: 8px;\r\n    border-top-left-radius: 12px;\r\n    border-bottom-left-radius: 12px;\r\n    border-top-right-radius: 12px;\r\n    border-bottom-right-radius: 12px;\r\n    width: ${(props) => `${props.progress}%`};\r\n    z-index: 2;\r\n    background: ${(props) => props.theme.blue};\r\n    ${(props) =>\r\n        props.progress === 100 &&\r\n        css`\r\n            background: ${(props) => props.theme.red};\r\n        `}\r\n`;\r\n\r\nexport const Finished = styled.div`\r\n    position: absolute;\r\n    bottom: 10px;\r\n    color: ${(props) => props.theme.red};\r\n    right: 0;\r\n`;\r\n\r\nexport const Progressing = styled.div`\r\n    position: absolute;\r\n    bottom: -20px;\r\n    left: 50%;\r\n    width: 100%;\r\n    transform: translateX(-50%);\r\n    font-size: ${(props) => props.theme.ss};\r\n`;\r\n","import React from \"react\";\r\nimport { BsStar, BsStarFill } from \"react-icons/bs\";\r\nimport { ImFire } from \"react-icons/im\";\r\nimport {\r\n    BoardBox,\r\n    BoardContainer,\r\n    BoardInfo,\r\n    BoardParty,\r\n    BoardTitle,\r\n    CateContent,\r\n    CateTitle,\r\n    Container,\r\n    Finished,\r\n    ProgressBar,\r\n    ProgressBarWrap,\r\n    ProgressGage,\r\n    Progressing,\r\n} from \"./style\";\r\n\r\nconst Presenter = ({\r\n    boards,\r\n    checkPercent,\r\n    limitNumberOfPeople,\r\n    onRefresh,\r\n}) => {\r\n    console.log(`createBoards : ${boards}`);\r\n    return (\r\n        <Container>\r\n            <div\r\n                style={{\r\n                    cursor: \"pointer\",\r\n                    margin: \"0 auto\",\r\n                    width: \"100px\",\r\n                    fontSize: \"20px\",\r\n                    background: \"black\",\r\n                    color: \"white\",\r\n                    textAlign: \"center\",\r\n                }}\r\n                onClick={onRefresh}>\r\n                refreshBtn\r\n            </div>\r\n            <CateContent>\r\n                <BoardContainer>\r\n                    <CateTitle>FAKER</CateTitle>\r\n                    {boards.map((board) => (\r\n                        <BoardBox key={board.id}>\r\n                            <BoardTitle>\r\n                                <div>{board.title}</div>\r\n\r\n                                <BsStarFill size={18} fill=\"white\" />\r\n                                <BsStar size={18} />\r\n                                <BoardParty>\r\n                                    {board.participateUsers\r\n                                        .slice(0, 5)\r\n                                        .map((user, index) => (\r\n                                            <div key={index}>\r\n                                                <img\r\n                                                    src={user.img}\r\n                                                    alt=\"user\"\r\n                                                />\r\n                                            </div>\r\n                                        ))}\r\n                                    {board.participateUsers.length > 5 && (\r\n                                        <span>...</span>\r\n                                    )}\r\n                                </BoardParty>\r\n                            </BoardTitle>\r\n                            <BoardInfo>\r\n                                <div>{board.deadline}</div>\r\n                                <div>{board.participateUsers.length}</div>\r\n                                <div>{board.limitNumberOfPeople}</div>\r\n                                <ProgressBar>\r\n                                    <ProgressBarWrap></ProgressBarWrap>\r\n                                    <ProgressGage\r\n                                        progress={Math.round(\r\n                                            (board.participateUsers.length /\r\n                                                limitNumberOfPeople) *\r\n                                                100\r\n                                        )}>\r\n                                        {/* 이곳 조건문은 후에 finishcheck가 되면 수정 */}\r\n                                        {board.participateUsers.length ===\r\n                                            board.limitNumberOfPeople && (\r\n                                            <Finished>\r\n                                                <ImFire />\r\n                                            </Finished>\r\n                                        )}\r\n                                    </ProgressGage>\r\n                                    {board.participateUsers.length ===\r\n                                        board.limitNumberOfPeople || (\r\n                                        <Progressing>\r\n                                            {checkPercent(\r\n                                                Math.round(\r\n                                                    (board.participateUsers\r\n                                                        .length /\r\n                                                        limitNumberOfPeople) *\r\n                                                        100\r\n                                                )\r\n                                            )}\r\n                                        </Progressing>\r\n                                    )}\r\n                                </ProgressBar>\r\n                            </BoardInfo>\r\n                        </BoardBox>\r\n                    ))}\r\n                </BoardContainer>\r\n            </CateContent>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Presenter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Presenter from \"./Presenter\";\r\nimport faker from \"faker\";\r\n\r\nconst Container = () => {\r\n    // faker data\r\n    const [boards, setBoards] = useState();\r\n\r\n    const createUser = () => {\r\n        return {\r\n            img: faker.image.avatar(),\r\n        };\r\n    };\r\n    const limitNumberOfPeople = 8;\r\n    const participateUsers = () => {\r\n        return Math.round(Math.random() * limitNumberOfPeople);\r\n    };\r\n    const createBoard = () => {\r\n        return {\r\n            id: faker.random.uuid(),\r\n            title: faker.lorem.sentence(),\r\n            deadline: \"2020-11-14\",\r\n            participateUsers: new Array(participateUsers())\r\n                .fill(undefined)\r\n                .map(createUser),\r\n            limitNumberOfPeople,\r\n        };\r\n    };\r\n    const createBoards = (numUsers = 20) => {\r\n        return new Array(numUsers).fill(undefined).map(createBoard);\r\n    };\r\n\r\n    // valid\r\n    const checkPercent = (percent) => {\r\n        if (percent > 90) {\r\n            return \"Last!\";\r\n        }\r\n        if (percent > 70) {\r\n            return \"Come HERE!!\";\r\n        }\r\n        if (percent > 50) {\r\n            return \"Hurry Up!\";\r\n        }\r\n        if (percent > 5) {\r\n            return \"I Need You..\";\r\n        }\r\n        if (percent === 0) {\r\n            return \"Help ME!!\";\r\n        }\r\n    };\r\n\r\n    const onRefresh = () => {\r\n        setBoards(createBoards());\r\n    };\r\n\r\n    useEffect(() => {\r\n        setBoards(createBoards());\r\n    }, []);\r\n\r\n    if (!boards) {\r\n        return <div>loading...</div>;\r\n    }\r\n    return (\r\n        <Presenter\r\n            onRefresh={onRefresh}\r\n            boards={boards}\r\n            checkPercent={checkPercent}\r\n            limitNumberOfPeople={limitNumberOfPeople}></Presenter>\r\n    );\r\n};\r\n\r\nexport default Container;\r\n","import React from \"react\";\nimport Container from \"./components/Container\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n    ls: \"18px\",\n    ms: \"14px\",\n    ss: \"12px\",\n    white: \"#fff\",\n    black: \"#14171a\",\n    yellow: \"rgb(251, 188, 31)\",\n    lightenBlue: \"#657786\",\n    lightenBlack: \"#f5f8fa\",\n    blue: \"#1da1f2\",\n    red: \"#d63031\",\n    border: \"rgba (0,0,0,0.2)\",\n};\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <Container />;\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}