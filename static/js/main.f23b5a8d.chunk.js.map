{"version":3,"sources":["components/style.js","components/Presenter.js","components/Container.js","App.js","reportWebVitals.js","index.js"],"names":["Button","styled","div","props","theme","white","blue","Box","border","Container","lightenBlack","CateContent","CateTitle","h2","BoardContainer","BoardBox","BoardTitle","ms","BoardParty","ls","BoardInfo","ss","black","lightenBlue","red","ProgressBar","ProgressBarWrap","yellow","ProgressGage","progress","css","Finished","Progressing","Presenter","boards","checkPercent","limitNumberOfPeople","onRefresh","onChange","number","console","log","onClick","value","maximum","type","length","map","board","title","desc","size","fill","participateUsers","slice","user","index","src","img","alt","deadline","Math","round","id","style","margin","width","fontSize","textAlign","useState","setBoards","setNumber","createUser","faker","image","avatar","createBoard","random","uuid","lorem","sentence","words","date","weekday","Array","undefined","useCallback","e","target","useEffect","numUsers","parseInt","percent","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f23b5a8d.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nexport const Button = styled.div`\r\n    width: 300px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n\r\n    button {\r\n        all: unset;\r\n        padding: 6px;\r\n        margin: 6px 0;\r\n        color: ${(props) => props.theme.white};\r\n        background: ${(props) => props.theme.blue};\r\n        cursor: pointer;\r\n        border-radius: 12px;\r\n    }\r\n`;\r\n\r\nexport const Box = styled.div`\r\n    width: 300px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n\r\n    input {\r\n        border-radius: 12px;\r\n        outline: none;\r\n        border: 1px solid ${(props) => props.theme.border};\r\n    }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    background: ${(props) => props.theme.lightenBlack};\r\n`;\r\n\r\nexport const CateContent = styled.div`\r\n    max-width: 1060px;\r\n    width: 100%;\r\n    display: flex;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const CateTitle = styled.h2`\r\n    margin: 0;\r\n    margin-bottom: 12px;\r\n    padding: 12px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const BoardContainer = styled.div`\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const BoardBox = styled.div`\r\n    width: 760px;\r\n    height: 130px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    border: 1px solid ${(props) => props.theme.border};\r\n    background: ${(props) => props.theme.white};\r\n    padding: 12px;\r\n    margin: 24px 0;\r\n`;\r\n\r\nexport const BoardTitle = styled.div`\r\n    position: relative;\r\n    width: 70%;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    & > div:nth-child(1) {\r\n        width: 80%;\r\n        font-size: ${(props) => props.theme.ms};\r\n        margin-right: 3px;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        position: relative;\r\n\r\n        a:hover {\r\n            text-decoration: underline;\r\n        }\r\n    }\r\n    svg {\r\n        position: absolute;\r\n        right: 10px;\r\n        top: 0px;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport const BoardParty = styled.div`\r\n    position: absolute;\r\n    display: flex;\r\n    bottom: 1px;\r\n    width: 100%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    line-height: 34px;\r\n    & > div {\r\n        width: 40px;\r\n        height: 40px;\r\n        border-radius: 50%;\r\n        margin-left: 6px;\r\n\r\n        & > img {\r\n            border: 1px solid ${(props) => props.theme.lightenBlack};\r\n            width: 100%;\r\n            height: 100%;\r\n            border-radius: 50%;\r\n        }\r\n    }\r\n    span {\r\n        margin-left: 5px;\r\n        line-height: 24px;\r\n        border: 1px solid ${(props) => props.theme.lightenBlack};\r\n        border-radius: 50%;\r\n        width: 40px;\r\n        height: 40px;\r\n        font-size: ${(props) => props.theme.ls};\r\n        cursor: pointer;\r\n        text-align: center;\r\n\r\n        &:hover {\r\n            background: ${(props) => props.theme.lightenBlack};\r\n        }\r\n    }\r\n`;\r\n\r\nexport const BoardInfo = styled.div`\r\n    display: grid;\r\n    position: relative;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    width: 30%;\r\n\r\n    & > div {\r\n        text-align: center;\r\n    }\r\n\r\n    & > div:nth-child(1) {\r\n        font-size: ${(props) => props.theme.ms};\r\n        position: relative;\r\n        &::before {\r\n            content: \"마감\";\r\n            width: 96%;\r\n            height: 16px;\r\n            font-size: ${(props) => props.theme.ss};\r\n            position: absolute;\r\n            left: 0;\r\n            top: 25px;\r\n            color: ${(props) => props.theme.white};\r\n            background: ${(props) => props.theme.black};\r\n            border-radius: 12px;\r\n        }\r\n    }\r\n    & > div:nth-child(2) {\r\n        font-size: ${(props) => props.theme.ms};\r\n        position: relative;\r\n\r\n        &::before {\r\n            content: \"현재\";\r\n            width: 96%;\r\n            height: 16px;\r\n            font-size: ${(props) => props.theme.ss};\r\n            position: absolute;\r\n            left: 0;\r\n            top: 25px;\r\n            color: ${(props) => props.theme.white};\r\n            background: ${(props) => props.theme.lightenBlue};\r\n            border-radius: 12px;\r\n        }\r\n    }\r\n    & > div:nth-child(3) {\r\n        position: relative;\r\n        font-size: ${(props) => props.theme.ms};\r\n\r\n        &::before {\r\n            content: \"제한\";\r\n            width: 96%;\r\n            height: 16px;\r\n            font-size: ${(props) => props.theme.ss};\r\n            position: absolute;\r\n            left: 0;\r\n            top: 25px;\r\n            color: ${(props) => props.theme.white};\r\n            background: ${(props) => props.theme.red};\r\n            border-radius: 12px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ProgressBar = styled.div`\r\n    position: absolute;\r\n    bottom: 15px;\r\n    width: 100%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n`;\r\n\r\nexport const ProgressBarWrap = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    bottom: 0;\r\n    height: 8px;\r\n    border-radius: 12px;\r\n    background: ${(props) => props.theme.yellow};\r\n`;\r\n\r\nexport const ProgressGage = styled.div`\r\n    position: absolute;\r\n    bottom: 0;\r\n    height: 8px;\r\n    border-top-left-radius: 12px;\r\n    border-bottom-left-radius: 12px;\r\n    border-top-right-radius: 12px;\r\n    border-bottom-right-radius: 12px;\r\n    width: ${(props) => `${props.progress}%`};\r\n    z-index: 2;\r\n    background: ${(props) => props.theme.blue};\r\n    ${(props) =>\r\n        props.progress === 100 &&\r\n        css`\r\n            background: ${(props) => props.theme.red};\r\n        `}\r\n`;\r\n\r\nexport const Finished = styled.div`\r\n    position: absolute;\r\n    bottom: 10px;\r\n    color: ${(props) => props.theme.red};\r\n    right: 0;\r\n`;\r\n\r\nexport const Progressing = styled.div`\r\n    position: absolute;\r\n    bottom: -20px;\r\n    left: 50%;\r\n    width: 100%;\r\n    transform: translateX(-50%);\r\n    font-size: ${(props) => props.theme.ss};\r\n`;\r\n","import React from \"react\";\r\nimport { BsStar, BsStarFill } from \"react-icons/bs\";\r\nimport { ImFire } from \"react-icons/im\";\r\nimport {\r\n    BoardBox,\r\n    BoardContainer,\r\n    BoardInfo,\r\n    BoardParty,\r\n    BoardTitle,\r\n    Box,\r\n    Button,\r\n    CateContent,\r\n    CateTitle,\r\n    Container,\r\n    Finished,\r\n    ProgressBar,\r\n    ProgressBarWrap,\r\n    ProgressGage,\r\n    Progressing,\r\n} from \"./style\";\r\n\r\nconst Presenter = ({\r\n    boards,\r\n    checkPercent,\r\n    limitNumberOfPeople,\r\n    onRefresh,\r\n    onChange,\r\n    number,\r\n}) => {\r\n    console.log(boards);\r\n\r\n    return (\r\n        <Container>\r\n            <Button>\r\n                <button onClick={onRefresh}>refreshBtn</button>\r\n            </Button>\r\n            <Box>\r\n                <input\r\n                    onChange={onChange}\r\n                    value={number}\r\n                    maximum=\"150\"\r\n                    type=\"number\"\r\n                />\r\n            </Box>\r\n            {boards && boards.length > 0 ? (\r\n                <>\r\n                    <CateContent>\r\n                        <BoardContainer>\r\n                            <CateTitle>FAKER</CateTitle>\r\n                            {boards.map((board) => (\r\n                                <BoardBox key={board.id}>\r\n                                    <BoardTitle>\r\n                                        <div>\r\n                                            <strong>{board.title}</strong>\r\n                                        </div>\r\n                                        <p>{board.desc}</p>\r\n                                        <BsStarFill size={18} fill=\"white\" />\r\n                                        <BsStar size={18} />\r\n                                        <BoardParty>\r\n                                            {board.participateUsers\r\n                                                .slice(0, 5)\r\n                                                .map((user, index) => (\r\n                                                    <div key={index}>\r\n                                                        <img\r\n                                                            src={user.img}\r\n                                                            alt=\"user\"\r\n                                                        />\r\n                                                    </div>\r\n                                                ))}\r\n                                            {board.participateUsers.length >\r\n                                                5 && <span>...</span>}\r\n                                        </BoardParty>\r\n                                    </BoardTitle>\r\n                                    <BoardInfo>\r\n                                        <div>{board.deadline}</div>\r\n                                        <div>\r\n                                            {board.participateUsers.length}\r\n                                        </div>\r\n                                        <div>{board.limitNumberOfPeople}</div>\r\n                                        <ProgressBar>\r\n                                            <ProgressBarWrap></ProgressBarWrap>\r\n                                            <ProgressGage\r\n                                                progress={Math.round(\r\n                                                    (board.participateUsers\r\n                                                        .length /\r\n                                                        limitNumberOfPeople) *\r\n                                                        100\r\n                                                )}>\r\n                                                {/* 이곳 조건문은 후에 finishcheck가 되면 수정 */}\r\n                                                {board.participateUsers\r\n                                                    .length ===\r\n                                                    board.limitNumberOfPeople && (\r\n                                                    <Finished>\r\n                                                        <ImFire />\r\n                                                    </Finished>\r\n                                                )}\r\n                                            </ProgressGage>\r\n                                            {board.participateUsers.length ===\r\n                                                board.limitNumberOfPeople || (\r\n                                                <Progressing>\r\n                                                    {checkPercent(\r\n                                                        Math.round(\r\n                                                            (board\r\n                                                                .participateUsers\r\n                                                                .length /\r\n                                                                limitNumberOfPeople) *\r\n                                                                100\r\n                                                        )\r\n                                                    )}\r\n                                                </Progressing>\r\n                                            )}\r\n                                        </ProgressBar>\r\n                                    </BoardInfo>\r\n                                </BoardBox>\r\n                            ))}\r\n                        </BoardContainer>\r\n                    </CateContent>\r\n                </>\r\n            ) : (\r\n                <div\r\n                    style={{\r\n                        margin: \"0 auto\",\r\n                        width: \"100%\",\r\n                        fontSize: \"20px\",\r\n                        textAlign: \"center\",\r\n                    }}>\r\n                    input창에 숫자 입력\r\n                </div>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Presenter;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport Presenter from \"./Presenter\";\r\nimport faker from \"faker\";\r\n\r\nconst Container = () => {\r\n    // faker data\r\n    const [boards, setBoards] = useState();\r\n    const [number, setNumber] = useState(0);\r\n\r\n    const createUser = () => {\r\n        return {\r\n            img: faker.image.avatar(),\r\n        };\r\n    };\r\n    const limitNumberOfPeople = 8;\r\n    const participateUsers = () => {\r\n        return Math.round(Math.random() * limitNumberOfPeople);\r\n    };\r\n    const createBoard = () => {\r\n        return {\r\n            id: faker.random.uuid(),\r\n            title: faker.lorem.sentence(),\r\n            desc: faker.lorem.words(),\r\n            deadline: faker.date.weekday(),\r\n            participateUsers: new Array(participateUsers())\r\n                .fill(undefined)\r\n                .map(createUser),\r\n            limitNumberOfPeople,\r\n        };\r\n    };\r\n    const createBoards = (numUsers) => {\r\n        return new Array(numUsers).fill(undefined).map(createBoard);\r\n    };\r\n\r\n    // valid\r\n    const checkPercent = (percent) => {\r\n        if (percent > 90) {\r\n            return \"Last!\";\r\n        }\r\n        if (percent > 70) {\r\n            return \"Come HERE!!\";\r\n        }\r\n        if (percent > 50) {\r\n            return \"Hurry Up!\";\r\n        }\r\n        if (percent > 5) {\r\n            return \"I Need You..\";\r\n        }\r\n        if (percent === 0) {\r\n            return \"Help ME!!\";\r\n        }\r\n    };\r\n\r\n    const onChange = useCallback(\r\n        (e) => {\r\n            const { value } = e.target;\r\n            if (value > 150) {\r\n                setNumber(150);\r\n            } else {\r\n                setNumber(e.target.value);\r\n            }\r\n        },\r\n        [number]\r\n    );\r\n\r\n    const onRefresh = useCallback((e) => {\r\n        setNumber(\"\");\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setBoards(createBoards(number ? parseInt(number) : 0));\r\n    }, [number]);\r\n\r\n    return (\r\n        <Presenter\r\n            onChange={onChange}\r\n            onRefresh={onRefresh}\r\n            boards={boards}\r\n            checkPercent={checkPercent}\r\n            number={number}\r\n            limitNumberOfPeople={limitNumberOfPeople}></Presenter>\r\n    );\r\n};\r\n\r\nexport default Container;\r\n","import React from \"react\";\nimport Container from \"./components/Container\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n    ls: \"18px\",\n    ms: \"14px\",\n    ss: \"12px\",\n    white: \"#fff\",\n    black: \"#14171a\",\n    yellow: \"rgb(251, 188, 31)\",\n    lightenBlue: \"#657786\",\n    lightenBlack: \"#f5f8fa\",\n    blue: \"#1da1f2\",\n    red: \"#d63031\",\n    border: \"rgba(0,0,0,0.2)\",\n};\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <Container />\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}